services:
  mqtt-broker:
    image: eclipse-mosquitto:latest
    container_name: mosquitto_broker
    ports:
      - "1883:1883" # MQTT
      - "8883:8883" # MQTTS (secure)
      - "9001:9001" # WebSockets
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    restart: unless-stopped
    environment:
      - TZ=UTC
    command: mosquitto -c /mosquitto/config/mosquitto.conf
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mosquitto_sub -h localhost -t 'healthcheck' -C 1 || exit 1",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s # Initial delay before starting health checks
    networks:
      - mqtt_network

  mqtt-publisher:
    build: ./python-app/publisher # Path to your Python application's Dockerfile
    container_name: mqtt_publisher
    depends_on:
      - mqtt-broker # Ensures broker starts before the app
    environment:
      PYTHONUNBUFFERED: 1
      MQTT_BROKER_HOST: mqtt-broker # Use the service name as hostname
      MQTT_BROKER_PORT: 1883
    networks:
      - mqtt_network

  mqtt-subscriber:
    build: ./python-app/subscriber # Path to your Python application's Dockerfile
    container_name: mqtt_subscriber
    ports:
      - "15000:5000" # Example port if your Python app is a web server
    depends_on:
      - mysql-database
      - mqtt-broker # Ensures broker starts before the app
    environment:
      PYTHONUNBUFFERED: 1
      MQTT_BROKER_HOST: mqtt-broker # Use the service name as hostname
      MQTT_BROKER_PORT: 1883
      MYSQL_HOST: mysql-database
      MYSQL_USER: raphaelzh
      MYSQL_PASSWORD: 123456 # Replace with the password set in MySQL service
      MYSQL_DATABASE: heartbeat_monitor
    restart: unless-stopped
    networks:
      - mqtt_network

  mysql-database:
    image: mysql:latest # Path to your MySQL Dockerfile or use an image like 'mysql:latest'
    container_name: mysql_database
    hostname: mysql-database
    environment:
      MYSQL_ROOT_PASSWORD: 123456 # Replace with a strong password
      MYSQL_DATABASE: heartbeat_monitor
      MYSQL_USER: raphaelzh
      MYSQL_PASSWORD: 123456 # Replace with a strong password for the user
      MYSQL_ROOT_HOST: "%" # Allow root access from any host (for development purposes)
    ports:
      - "13306:3306" # Standard MySQL port
    volumes:
      - mysql-data:/var/lib/mysql # Persist data
      - ./mysql-init-scripts:/docker-entrypoint-initdb.d # Optional: For initial setup scripts
      - ./mysql/data:/var/lib/mysql
      - ./mysql/initdb:/docker-entrypoint-initdb.d # Optional: For initial setup scripts
      - ./mysql/log:/var/log/mysql
    restart: unless-stopped
    depends_on:
      - mqtt-broker # Optional: Ensure MQTT starts first if your application relies on it
    networks:
      - mqtt_network

networks:
  mqtt_network:
    name: mqtt_network
    driver: bridge

volumes:
  mosquitto_data:
    driver: local
  mosquitto_config:
    driver: local
  mosquitto_log:
    driver: local
  mysql_data:
    driver: local
